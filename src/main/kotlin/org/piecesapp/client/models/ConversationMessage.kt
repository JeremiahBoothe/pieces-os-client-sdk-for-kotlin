/**
* Pieces Isomorphic OpenAPI
* Endpoints for Assets, Formats, Users, Asset, Format, User.
*
* The version of the OpenAPI document: 1.0
* Contact: tsavo@pieces.app
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.ConversationMessageSentimentEnum
import org.openapitools.client.models.EmbeddedModelSchema
import org.openapitools.client.models.FlattenedAnnotations
import org.openapitools.client.models.FragmentFormat
import org.openapitools.client.models.GroupedTimestamp
import org.openapitools.client.models.Model
import org.openapitools.client.models.QGPTConversationMessageRoleEnum
import org.openapitools.client.models.ReferencedConversation
import org.openapitools.client.models.Score

import com.squareup.moshi.Json

/**
 * This is a fully referenced ConversationMessage.  This has the minimum amount of properties to keep this light weight  (will consider additional properties in the future like people/tags/links xyz)
 * @param id 
 * @param created 
 * @param updated 
 * @param conversation 
 * @param role 
 * @param schema 
 * @param deleted 
 * @param model 
 * @param fragment 
 * @param sentiment 
 * @param score 
 * @param annotations 
 */

data class ConversationMessage (
    @Json(name = "id")
    val id: kotlin.String,
    @Json(name = "created")
    val created: GroupedTimestamp,
    @Json(name = "updated")
    val updated: GroupedTimestamp,
    @Json(name = "conversation")
    val conversation: ReferencedConversation,
    @Json(name = "role")
    val role: QGPTConversationMessageRoleEnum,
    @Json(name = "schema")
    val schema: EmbeddedModelSchema? = null,
    @Json(name = "deleted")
    val deleted: GroupedTimestamp? = null,
    @Json(name = "model")
    val model: Model? = null,
    @Json(name = "fragment")
    val fragment: FragmentFormat? = null,
    @Json(name = "sentiment")
    val sentiment: ConversationMessageSentimentEnum? = null,
    @Json(name = "score")
    val score: Score? = null,
    @Json(name = "annotations")
    val annotations: FlattenedAnnotations? = null
)

