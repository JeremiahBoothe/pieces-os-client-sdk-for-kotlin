/**
* Pieces Isomorphic OpenAPI
* Endpoints for Assets, Formats, Users, Asset, Format, User.
*
* The version of the OpenAPI document: 1.0
* Contact: tsavo@pieces.app
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.EmbeddedModelSchema
import org.openapitools.client.models.FlattenedAnnotations
import org.openapitools.client.models.FlattenedAssets
import org.openapitools.client.models.FlattenedTags
import org.openapitools.client.models.FlattenedWebsites
import org.openapitools.client.models.GroupedTimestamp
import org.openapitools.client.models.MechanismEnum
import org.openapitools.client.models.PersonAccess
import org.openapitools.client.models.PersonModel
import org.openapitools.client.models.PersonType
import org.openapitools.client.models.Score

import com.squareup.moshi.Json

/**
 * if expiration is add then, after the alloted expiration date the user will only have view && comment only permissions. Only present in the case there is a scope such as a defined collection/asset...  if asset is passed then that means this person belongs to a scoped asset.  NOTE****: annotations here are annotations to describe the person!!! if in the future we want to add who wrote an annotation on and asset or soemthing like that, we will want to add a new field on here called authorships.
 * @param id 
 * @param created 
 * @param updated 
 * @param type 
 * @param schema 
 * @param deleted 
 * @param assets 
 * @param mechanisms This is a Map<String, MechanismEnum> where the the key is an asset id.
 * @param interactions This is an optional value that will keep track of the number of times this has been interacted with.
 * @param access This is a Map<String, PersonAccess> where the the key is an asset id.
 * @param tags 
 * @param websites 
 * @param models This is a Map<String, PersonModel>, where the the key is an asset id.
 * @param annotations 
 * @param score 
 */

data class Person (
    @Json(name = "id")
    val id: kotlin.String,
    @Json(name = "created")
    val created: GroupedTimestamp,
    @Json(name = "updated")
    val updated: GroupedTimestamp,
    @Json(name = "type")
    val type: PersonType,
    @Json(name = "schema")
    val schema: EmbeddedModelSchema? = null,
    @Json(name = "deleted")
    val deleted: GroupedTimestamp? = null,
    @Json(name = "assets")
    val assets: FlattenedAssets? = null,
    /* This is a Map<String, MechanismEnum> where the the key is an asset id. */
    @Json(name = "mechanisms")
    val mechanisms: kotlin.collections.Map<kotlin.String, MechanismEnum>? = null,
    /* This is an optional value that will keep track of the number of times this has been interacted with. */
    @Json(name = "interactions")
    val interactions: kotlin.Int? = null,
    /* This is a Map<String, PersonAccess> where the the key is an asset id. */
    @Json(name = "access")
    val access: kotlin.collections.Map<kotlin.String, PersonAccess>? = null,
    @Json(name = "tags")
    val tags: FlattenedTags? = null,
    @Json(name = "websites")
    val websites: FlattenedWebsites? = null,
    /* This is a Map<String, PersonModel>, where the the key is an asset id. */
    @Json(name = "models")
    val models: kotlin.collections.Map<kotlin.String, PersonModel>? = null,
    @Json(name = "annotations")
    val annotations: FlattenedAnnotations? = null,
    @Json(name = "score")
    val score: Score? = null
)

