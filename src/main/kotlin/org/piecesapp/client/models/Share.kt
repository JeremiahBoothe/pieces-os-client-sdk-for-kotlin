/**
* Pieces Isomorphic OpenAPI
* Endpoints for Assets, Formats, Users, Asset, Format, User.
*
* The version of the OpenAPI document: 1.0
* Contact: tsavo@pieces.app
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.AccessEnum
import org.openapitools.client.models.Accessors
import org.openapitools.client.models.Distributions
import org.openapitools.client.models.EmbeddedModelSchema
import org.openapitools.client.models.FlattenedAsset
import org.openapitools.client.models.FlattenedAssets
import org.openapitools.client.models.GroupedTimestamp
import org.openapitools.client.models.Score

import com.squareup.moshi.Json

/**
 * This represents what information that is relavent to anything and every sharing related. v1 will look very bare and will add more and more data as we go!  if user is undefined && access is public then we have an asset that is publicly available.
 * @param id This is the uuid that represents this share model.
 * @param link This is the prebuilt link.
 * @param access 
 * @param accessors 
 * @param created 
 * @param short This is a shortened version of our uuid.
 * @param schema 
 * @param user this is the uuid of the user that the share is created for.
 * @param asset 
 * @param assets 
 * @param name this is an optional name we can give to the link, ie ?p=JAVASCRIPT or what ever the user wants as long as it is available.
 * @param distributions 
 * @param score 
 */

data class Share (
    /* This is the uuid that represents this share model. */
    @Json(name = "id")
    val id: kotlin.String,
    /* This is the prebuilt link. */
    @Json(name = "link")
    val link: kotlin.String,
    @Json(name = "access")
    val access: AccessEnum,
    @Json(name = "accessors")
    val accessors: Accessors,
    @Json(name = "created")
    val created: GroupedTimestamp,
    /* This is a shortened version of our uuid. */
    @Json(name = "short")
    val short: kotlin.String,
    @Json(name = "schema")
    val schema: EmbeddedModelSchema? = null,
    /* this is the uuid of the user that the share is created for. */
    @Json(name = "user")
    val user: kotlin.String? = null,
    @Json(name = "asset")
    val asset: FlattenedAsset? = null,
    @Json(name = "assets")
    val assets: FlattenedAssets? = null,
    /* this is an optional name we can give to the link, ie ?p=JAVASCRIPT or what ever the user wants as long as it is available. */
    @Json(name = "name")
    val name: kotlin.String? = null,
    @Json(name = "distributions")
    val distributions: Distributions? = null,
    @Json(name = "score")
    val score: Score? = null
)

