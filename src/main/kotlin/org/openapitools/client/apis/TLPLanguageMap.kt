/**
* Runtime Common Library
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.piecesapp.client.apis


import com.squareup.moshi.Json

/**
 * This is going to have a model of all our languages. all will be optional here.
 * @param batchfile 
 * @param c 
 * @param coffeescript 
 * @param cpp 
 * @param csharp 
 * @param css 
 * @param dart 
 * @param erlang 
 * @param go 
 * @param haskell 
 * @param html 
 * @param java 
 * @param javascript 
 * @param lua 
 * @param markdown 
 * @param matlab 
 * @param objectivec 
 * @param perl 
 * @param php 
 * @param powershell 
 * @param python 
 * @param r 
 * @param ruby 
 * @param rust 
 * @param scala 
 * @param shellscript 
 * @param sql 
 * @param swift 
 * @param tex 
 * @param typescript 
 * @param toml 
 * @param yaml 
 * @param json 
 * @param groovy 
 * @param kotlin 
 * @param emacslisp 
 * @param clojure 
 * @param elixir 
 * @param xml 
 * @param solidity 
 * @param systemverilog 
 * @param asp 
 * @param coldfusion 
 */

data class TLPLanguageMap (
    @Json(name = "batchfile")
    val batchfile: TLPLanguageDescriptor? = null,
    @Json(name = "c")
    val c: TLPLanguageDescriptor? = null,
    @Json(name = "coffeescript")
    val coffeescript: TLPLanguageDescriptor? = null,
    @Json(name = "cpp")
    val cpp: TLPLanguageDescriptor? = null,
    @Json(name = "csharp")
    val csharp: TLPLanguageDescriptor? = null,
    @Json(name = "css")
    val css: TLPLanguageDescriptor? = null,
    @Json(name = "dart")
    val dart: TLPLanguageDescriptor? = null,
    @Json(name = "erlang")
    val erlang: TLPLanguageDescriptor? = null,
    @Json(name = "go")
    val go: TLPLanguageDescriptor? = null,
    @Json(name = "haskell")
    val haskell: TLPLanguageDescriptor? = null,
    @Json(name = "html")
    val html: TLPLanguageDescriptor? = null,
    @Json(name = "java")
    val java: TLPLanguageDescriptor? = null,
    @Json(name = "javascript")
    val javascript: TLPLanguageDescriptor? = null,
    @Json(name = "lua")
    val lua: TLPLanguageDescriptor? = null,
    @Json(name = "markdown")
    val markdown: TLPLanguageDescriptor? = null,
    @Json(name = "matlab")
    val matlab: TLPLanguageDescriptor? = null,
    @Json(name = "objectivec")
    val objectivec: TLPLanguageDescriptor? = null,
    @Json(name = "perl")
    val perl: TLPLanguageDescriptor? = null,
    @Json(name = "php")
    val php: TLPLanguageDescriptor? = null,
    @Json(name = "powershell")
    val powershell: TLPLanguageDescriptor? = null,
    @Json(name = "python")
    val python: TLPLanguageDescriptor? = null,
    @Json(name = "r")
    val r: TLPLanguageDescriptor? = null,
    @Json(name = "ruby")
    val ruby: TLPLanguageDescriptor? = null,
    @Json(name = "rust")
    val rust: TLPLanguageDescriptor? = null,
    @Json(name = "scala")
    val scala: TLPLanguageDescriptor? = null,
    @Json(name = "shellscript")
    val shellscript: TLPLanguageDescriptor? = null,
    @Json(name = "sql")
    val sql: TLPLanguageDescriptor? = null,
    @Json(name = "swift")
    val swift: TLPLanguageDescriptor? = null,
    @Json(name = "tex")
    val tex: TLPLanguageDescriptor? = null,
    @Json(name = "typescript")
    val typescript: TLPLanguageDescriptor? = null,
    @Json(name = "toml")
    val toml: TLPLanguageDescriptor? = null,
    @Json(name = "yaml")
    val yaml: TLPLanguageDescriptor? = null,
    @Json(name = "json")
    val json: TLPLanguageDescriptor? = null,
    @Json(name = "groovy")
    val groovy: TLPLanguageDescriptor? = null,
    @Json(name = "kotlin")
    val kotlin: TLPLanguageDescriptor? = null,
    @Json(name = "emacslisp")
    val emacslisp: TLPLanguageDescriptor? = null,
    @Json(name = "clojure")
    val clojure: TLPLanguageDescriptor? = null,
    @Json(name = "elixir")
    val elixir: TLPLanguageDescriptor? = null,
    @Json(name = "xml")
    val xml: TLPLanguageDescriptor? = null,
    @Json(name = "solidity")
    val solidity: TLPLanguageDescriptor? = null,
    @Json(name = "systemverilog")
    val systemverilog: TLPLanguageDescriptor? = null,
    @Json(name = "asp")
    val asp: TLPLanguageDescriptor? = null,
    @Json(name = "coldfusion")
    val coldfusion: TLPLanguageDescriptor? = null
)

